<div class="sidebar spectrumpage">
<div class="box">
  <h3>// SETS WITH THIS SPECTRUM</h3>
  <% @spectrum.sets.each do |set| %>
  <p><a href="/sets/show/<%= set.id %>"><%= set.title %></a></p>
  <% end %>
</div>
<div id="compare" class="box">
  <h3>// COMPARE SPECTRA</h3>
  <p>
    <form id="compareForm" action="javascript:void(0);">
    <input class='text' id='searchinput' type='text' name='q' value=''/>
    <input type='submit' id='searchsubmit' value='search' />
    </form>
    <script>

	var spectra = [<%= @spectrum.id %>]
        $.ajaxSetup ({ cache: false }); 

	var ajax_load = "<img src='/images/spinner-small.gif' alt='loading...' />";

	$("#compareForm").submit(function(){
		var url = "/spectrums/compare/<%= @spectrum.id %>?q="+$("#searchinput").val();
		$("#result").html(ajax_load).load(url);
	});

    </script>
  </p>
  <div id="result">
    <b>Recent spectra:</b><br />
    <%= render :partial => "compare" %>
  </div>
</div>
</div>

<div id="show">
<p>
<img id="image" src="http://spectralworkbench.org<%= @spectrum.photo.url(:large) %>" />
<div id="graph" style="width:830px;height:200px;"></div>

<script type="text/javascript">
    spectrum = <%= @spectrum.data.gsub('"',"'") %>
    data = [{label: "<%= @spectrum.title.gsub('"',"'") %> = 0% ",data:[]}]
    scaled = true
    $.each(spectrum.lines,function(index,line) {
      if (line.wavelength == null) {
	line.wavelength = index
	scaled = false
      }
      data[0].data.push([line.wavelength,line.average/(2.55)])
    })
    flotoptions.xaxis.show = scaled
    plot = $.plot($("#graph"),data,flotoptions);
    init_hovers();

    var legends;
    var updateLegendTimeout = null;
    var latestPosition = null;
    
    function updateLegend() {
        updateLegendTimeout = null;
        
        var pos = latestPosition;
        
        var axes = plot.getAxes();
        if (pos.x < axes.xaxis.min || pos.x > axes.xaxis.max ||
            pos.y < axes.yaxis.min || pos.y > axes.yaxis.max)
            return;

        var i, j, dataset = plot.getData();
        for (i = 0; i < dataset.length; ++i) {
            var series = dataset[i];

            // find the nearest points, x-wise
            for (j = 0; j < series.data.length; ++j)
                if (series.data[j][0] > pos.x)
                    break;
            
            // now interpolate
            var y, p1 = series.data[j - 1], p2 = series.data[j];
            if (p1 == null)
                y = p2[1];
            else if (p2 == null)
                y = p1[1];
            else
                y = p1[1] + (p2[1] - p1[1]) * (pos.x - p1[0]) / (p2[0] - p1[0]);

	    $('#wavelength').html(parseInt(pos.x))
            legends.eq(i).html(series.label.replace(/=.*%/, "= " + parseInt(y) + "%"));
        }
    }
    
    function init_hovers() {
      $("#graph").bind("plothover",  function (event, pos, item) {
        latestPosition = pos;
        if (!updateLegendTimeout)
            updateLegendTimeout = setTimeout(updateLegend, 50);
      });
      legends = $("#graph .legendLabel");
      legends.each(function () {
        // fix the widths so they don't jump around
        $(this).css('width', $(this).width()+10);
      });

    }

</script>

<div id="toolbar">
	<p>
	<b><span id="wavelength"></span> <span id="#unit_label">nm</span></b> | 
	<small>Embed code: <input style="font-size:11px" id="embedcode" type="text" value="<iframe width='500px' height='400px' border='0' src='http://spectralworkbench.org/spectra/embed/<%= @spectrum.id %>'></iframe>" /></small>
	<a id="units" class="smallbutton" href="javascript:void(0);">Toggle units</a>
	<% if logged_in? %>
		<a id="createSet" class="smallbutton" style="display:none;" href="javascript:void(0);">Save as set +</a>
		<% if current_user.id == @spectrum.user_id %>
			<a id="extract" class="smallbutton" href="javascript:void(0);">Re-extract from photo</a>
			<a id="clone" class="smallbutton" href="javascript:void(0);">Clone calibration</a>
			<a id="calibrate" class="smallbutton" href="javascript:void(0);">Calibrate</a>
		<% end %>
	<% end %>
	<span id="toolbar_notification"></span>
	</p>
</div>
<script>

	$('#units').click(function() {
		if (flotoptions.xaxis.tickFormatter == wavenumbers) {
			flotoptions.xaxis.tickFormatter = nanometers
			flotoptions.xaxis.tickSize = 100
		} else {
			flotoptions.xaxis.tickFormatter = wavenumbers
			flotoptions.xaxis.tickSize = wavenumber_tickSize
		}
		$.plot($("#graph"),data,flotoptions);
	})
	$('#createSet').click(function() {
		var f = document.createElement('form');
		f.style.display = 'none';
		$('#graph').append(f);
		f.id = "createsetform"
		var i = document.createElement('input');
		i.name = "authenticity_token"
		i.value = "<%= form_authenticity_token %>"
		$('#createsetform').append(i);
		f.method = 'POST';
		f.action = "/sets/new/"+spectra.join(',')
		f.submit();
	})
	$('#extract').click(function() {
		var f = document.createElement('form');
		f.style.display = 'none';
		$('#graph').append(f);
		f.id = "extractform"
		var i = document.createElement('input');
		i.name = "authenticity_token"
		i.value = "<%= form_authenticity_token %>"
		$('#extractform').append(i);
		f.method = 'POST';
		f.action = "/spectrums/extract/<%= @spectrum.id %>"
		f.submit();
	})
	$('#clone').click(function() {
		// use uniq_id as a CSS class, only show those from the same device
		$('.cloneCalibration').show()
	})
	// we could switch to "selection" http://people.iola.dk/olau/flot/examples/selection.html
	$('#calibrate').click(function() {
		$("#toolbar_notification").html("Click on the middle blue band (<a href='http://publiclaboratory.org/wiki/spectral-workbench-calibration'>Learn more</a>)")
		// observe clicks to graph:
		$("#graph").bind("plotclick", function (event, pos, item) {
			second_calibration(pos.x,435.833)
			// axis coordinates for other axes, if present, are in pos.x2, pos.x3, ...
		});
	})

	function second_calibration(x1,w1) {
		$("#toolbar_notification").html("Click on the bright green band")
		// observe clicks to graph:
		$("#graph").bind("plotclick", function (event, pos, item) {
			complete_calibration(x1,w1,pos.x,546.074)
		});
	}
	function complete_calibration(x1,w1,x2,w2) {
		$("#toolbar_notification").html("Calibrating...")
		var f = document.createElement('form');
		f.style.display = 'none';
		$('#graph').append(f);
		f.id = "calibrateform"
		var i = document.createElement('input');
		i.name = "authenticity_token"
		i.value = "<%= form_authenticity_token %>"
		$('#calibrateform').append(i);
		f.method = 'POST';
		f.action = "/spectra/calibrate/<%= @spectrum.id %>?x1="+x1+"&w1="+w1+"&x2="+x2+"&w2="+w2
		f.submit();
	}

	$('#embedcode').click(function() {
		this.focus()
		this.select()
	})

</script>

</p>

<h1><%= @spectrum.title %></h1>

<h3>// DETAILS</h3>

<p>
uploaded by <a href="/spectra/author/<%= @spectrum.author %>"><%= @spectrum.author %></a> (<a href="/spectra/feed/<%= @spectrum.author %>">RSS</a>)</p>
<p>
<a href="<%= @spectrum.id %>.json">JSON</a> | 
<a href="<%= @spectrum.id %>.xml">XML</a>
</p>

<h3>// NOTES</h3>
<p class="description"><%= markdown(@spectrum.notes) if @spectrum.notes %></p>
<% if @spectrum.notes == "" %><p class="description"><i>None</i></p><% end %>

<h3>// LICENSE</h3>

<p xmlns:dct="http://purl.org/dc/terms/" xmlns:vcard="http://www.w3.org/2001/vcard-rdf/3.0#">
  <a style="float:left;margin-right:6px;display:block;" rel="license" href="http://creativecommons.org/publicdomain/zero/1.0/"><img src="http://i.creativecommons.org/p/zero/1.0/88x31.png" style="border-style: none;" alt="CC0" /></a>
  To the extent possible under law,
  <%# if @spectrum.author.url %><a rel="dct:publisher" href="http://publiclaboratory.org"><%# end %>
    <span property="dct:title"><%= @spectrum.author %></span><%# if @spectrum.author.url %></a><%# end %>
  has waived all copyright and related or neighboring rights to
  "<span property="dct:title"><%= @spectrum.title %></span>".
This work is published from:
<span property="vcard:Country" datatype="dct:ISO3166"
      content="US" about="http://publiclaboratory.org">
  United States</span>.
</p>

<hr />

<a name="comments"></a>
<h2>Comments (<%= @spectrum.comments.length %>)</h2>

<% @spectrum.comments.each do |comment| %>
<div class="comment">
	<a name="comment_<%= comment.id %>"></a>
	<b><%= time_ago_in_words(comment.created_at) %> ago, 
	<% if User.find_by_login(comment.author) %><a href="/spectra/author/<%= comment.author %>"><%= comment.author %></a> wrote:</b>
	<% else %><%=h comment.author %> wrote:</b>
	<% end %>
	<p><%=h comment.body %></p>
	<% if logged_in? && current_user.role == "admin" %><p><a href="/comments/delete/<%= comment.id %>">Delete</a></p><% end %>
</div>
<% end %>

<% if @jump_to_comment %>
<script>
  window.location.hash = "comments"
</script>
<% end %>

<% form_for(@comment, :url => {:controller => "spectrums", :action => "comment", :id => @spectrum.id}) do |f| %>

  <h2>Post a comment</h2>
  <%= f.error_messages %>

  <p>
    <%= f.label :body %><br />
    <%= f.text_area :body, :rows => 6 %>
  </p>

  <% if !logged_in? %>
  <p>
    <%= f.label :author %><br />
    <%= f.text_field :author %>
  </p>
  <p>
    <%= f.label :email %><br />
    <%= f.text_field :email %>
  </p>
  <% end %>

  <% if !APP_CONFIG["local"] %>
  <p>
    <%= recaptcha_tags :display => {:theme => "white"} %>
  </p>
  <% end %>

  <input type='hidden' name='id' value='<%= @spectrum.id %>' />

  <p>
    <%= f.submit 'Create' %>
  </p>
<% end %>
</div>
